from rest_framework import viewsets
from rest_framework import status
from django.shortcuts import get_object_or_404
from rest_framework.response import Response
from rest_framework.decorators import action
from rest_framework.permissions import IsAuthenticated
from .serializers import *
from eleves.models import *
from classes.models import *
from professeurs.models import *

""" ANNEE SCOLAIRE """
class AnneeScolaireViewSet(viewsets.ModelViewSet):
	queryset = AnneeScolaire.objects.all()
	serializer_class = AnneeScolairesSerializer
	permission_classes = (IsAuthenticated, )
	filterset_fields = ['classes']
	search_fields = ['classes']

	def list(self, request):
		queryset = self.queryset
		serializer = AnneeScolairesSerializer(queryset, many=True, context={'request':request})
		return Response(serializer.data)

	def retrieve(self, request, pk):
		queryset = self.queryset
		anneescolaire = get_object_or_404(queryset, id=pk)
		serializer = AnneeScolaireSerializer(anneescolaire)
		return Response(serializer.data)

anneescolaire_list = AnneeScolaireViewSet.as_view({'get': 'list'})
anneescolaire_detail = AnneeScolaireViewSet.as_view({'get': 'retrieve'})
""" ANNEE SCOLAIRE """

""" ELEVE """
class EleveViewSet(viewsets.ModelViewSet):
	queryset = Eleve.objects.all()
	serializer_class = ElevesSerializer
	permission_classes = (IsAuthenticated, )
	filterset_fields = ['prenom', 'nom']
	search_fields = ['prenom', 'nom']

	def list(self, request):
		queryset = self.queryset
		serializer = ElevesSerializer(queryset, many=True, context={'request':request})
		return Response(serializer.data)

	def retrieve(self, request, pk):
		queryset = self.queryset
		eleve = get_object_or_404(queryset, id=pk)
		serializer = EleveSerializer(eleve)
		return Response(serializer.data)

	def create(self, request):
		serializer = ElevesSerializer(data=request.data)
		if serializer.is_valid():
			serializer.save()
			return Response(serializer.data, status=status.HTTP_201_CREATED)
		return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)

eleve_list = EleveViewSet.as_view({'get': 'list', 'post':'create'})
eleve_detail = EleveViewSet.as_view({'get': 'retrieve'})

""" ELEVE """

class ClasseViewSet(viewsets.ModelViewSet):
	queryset = Classe.objects.all()
	serializer_class = ClassesSerializer

class ProfesseursViewSet(viewsets.ModelViewSet):
	queryset = Professeur.objects.all()
	serializer_class = ProfesseursSerializer

	def list(self, request):
		queryset = self.queryset
		serializer = ProfesseursSerializer(queryset, many=True)
		return Response(serializer.data)

	def retrieve(self, request, pk):
		queryset = self.queryset
		professeur = get_object_or_404(queryset, id=pk)
		serializer = ProfesseurSerializer(professeur)
		return Response(serializer.data)

professeur_list = ProfesseursViewSet.as_view({'get': 'list'})
professeur_detail = ProfesseursViewSet.as_view({'get': 'retrieve'})

class PaiementViewSet(viewsets.ModelViewSet):
	queryset = Paiement.objects.all()
	serializer_class = PaiementSerializer
